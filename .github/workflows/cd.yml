name: Build, Test, SonarQube, and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-package-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test
      continue-on-error: false

    - name: Run SonarQube analysis
      uses: SonarSource/sonarqube-scan-action@v6
      with:
        projectBaseDir: .
        organization: sda
        projectKey: sample-node-app-saurabh
        host-url: ${{ secrets.SONAR_HOST_URL }}
        token: ${{ secrets.SONAR_TOKEN }}
        # Exclude test, node_modules, coverage
        extra-properties: |
          sonar.exclusions=node_modules/**,coverage/**,tests/**,**/*.test.js,**/*.spec.js
          sonar.tests=tests/
          sonar.test.inclusions=**/*.test.js,**/*.spec.js

    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDS }}

    - name: Package app
      run: zip -r app.zip .

    - name: Upload to Azure Storage
      uses: azure/cli@v1
      with:
        inlineScript: |
          az storage blob upload \
            --account-name ${{ secrets.AZ_STORAGE_ACCOUNT }} \
            --container-name ${{ secrets.AZ_STORAGE_CONTAINER }} \
            --name app.zip \
            --file app.zip \
            --auth-mode key \
            --account-key ${{ secrets.AZ_STORAGE_KEY }}

    - name: Deploy to Azure VM
      uses: azure/cli@v1
      with:
        inlineScript: |
          ssh -o StrictHostKeyChecking=no azureuser@${{ secrets.AZURE_VM_NAME }} \
          'unzip -o ~/app.zip -d ~/app && pm2 restart app || pm2 start ~/app/index.js --name app'

