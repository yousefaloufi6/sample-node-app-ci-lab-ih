name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-test-sonar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --ci --reporters=default --reporters=jest-junit

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v6
        with:
          args: >
            -Dsonar.projectBaseDir=.
            -Dsonar.organization=your-org
            -Dsonar.projectKey=sample-node-app-saurabh
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  docker-build-push:
    runs-on: ubuntu-latest
    needs: build-test-sonar
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t your-dockerhub-username/sample-node-app:latest .
          docker push your-dockerhub-username/sample-node-app:latest

  deploy-to-azure:
    runs-on: ubuntu-latest
    needs: docker-build-push
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDS }}

      - name: Upload and execute deployment script
        uses: azure/cli@v2
        timeout-minutes: 20
        env:
          AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
          AZURE_VM_NAME: ${{ secrets.AZURE_VM_NAME }}
          PACKAGE_SAS_URL: ${{ env.PACKAGE_SAS_URL }}
        with:
          inlineScript: |
            # Upload deploy script
            timeout 300 az vm run-command invoke \
              --resource-group "$AZURE_RESOURCE_GROUP" \
              --name "$AZURE_VM_NAME" \
              --command-id RunShellScript \
              --scripts "cat > /tmp/deploy.sh << 'EOF'$(cat deploy.sh)
EOF
chmod +x /tmp/deploy.sh" || exit 1

            # Execute deploy script
            timeout 900 az vm run-command invoke \
              --resource-group "$AZURE_RESOURCE_GROUP" \
              --name "$AZURE_VM_NAME" \
              --command-id RunShellScript \
              --scripts "sudo timeout 800 /tmp/deploy.sh '$PACKAGE_SAS_URL'" || exit 1
